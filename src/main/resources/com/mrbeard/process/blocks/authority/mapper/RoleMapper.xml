<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbeard.process.blocks.authority.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.mrbeard.process.blocks.authority.model.Role">
        <constructor>
            <arg column="rid" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="rname" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="rdescription" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="createdTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="updatedTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>

    <sql id="Base_Column_List">
        rid,rname,rdescription,createdTime,updatedTime
    </sql>

    <sql id="UserRole_Column_List">
        uid,rid
    </sql>

    <insert id="insert" parameterType="com.mrbeard.process.blocks.authority.model.Role">
        insert into qx_role (rid, rname, rdescription, createdTime, updatedTime)
        values (#{rid,jdbcType=VARCHAR}, #{rname,jdbcType=VARCHAR}, #{rdescription,jdbcType=VARCHAR},
        #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertUserRole" parameterType="com.mrbeard.process.blocks.authority.model.UserRole">
        insert into qx_userrole (uid,rid)
        values(#{uid,jdbcType=VARCHAR},#{rid,jdbcType=VARCHAR})
    </insert>

    <select id="getRoleByUserId" parameterType="java.lang.String" resultType="java.lang.String">
        select
        r.rname
        from qx_role r
        inner join qx_userrole u_r on u_r.rid = r.rid
        where u_r.uid = #{uid,jdbcType=VARCHAR}
    </select>

    <select id="selectById" resultType="com.mrbeard.process.blocks.authority.model.Role" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from qx_role
        where rid = #{rid,jdbcType=VARCHAR}
    </select>

    <select id="selectUserRoleByUserId" resultType="com.mrbeard.process.blocks.authority.model.UserRole" parameterType="java.lang.String">
        select
        <include refid="UserRole_Column_List"/>
        from qx_userrole
        where uid = #{uid,jdbcType=VARCHAR}
    </select>

    <select id="getRoleList" resultType="com.mrbeard.process.blocks.authority.model.Role">
        select
        <include refid="Base_Column_List"/>
        from qx_role
    </select>

    <select id="getPermissionList" resultType="com.mrbeard.process.blocks.authority.model.Permission" parameterType="java.lang.String">
        select
        p.pid,p.pname,p.pvalue,p.createdTime,p.updatedTime
        from qx_permission p
        <if test="roleId != null and roleId != ''">
            left join qx_rolepermission rp on rp.pid = p.pid
        </if>
        where 1 = 1
        <if test="roleId != null and roleId != ''">
           and rp.rid = #{roleId,jdbcType=VARCHAR}
        </if>
    </select>

    <delete id="deleteById" parameterType="java.lang.String">
        delete
        from qx_role
        where rid = #{rid,jdbcType = VARCHAR}
    </delete>

    <delete id="deleteUserRoleByUserId" parameterType="java.lang.String">
        delete
        from qx_userrole
        where uid = #{uid,jdbcType = VARCHAR}
    </delete>

    <update id="updateById" parameterType="com.mrbeard.process.blocks.authority.model.Role">
        update qx_role
        <set>
            <if test="rname != null">
                rname = #{rname,jdbcType=VARCHAR},
            </if>
            <if test="rdescription != null">
                rdescription = #{rdescription,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                createdTime = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedTime != null">
                updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where rid = #{rid,jdbcType=VARCHAR}
    </update>

    <update id="updateUserRole" parameterType="com.mrbeard.process.blocks.authority.model.UserRole">
        update qx_userrole
        <set>
            <if test="rid != null">
                rid = #{rid,jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{uid,jdbcType=VARCHAR}
    </update>

</mapper>