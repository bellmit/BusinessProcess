<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbeard.process.blocks.authority.mapper.PermissionMapper">
    <resultMap id="BaseResultMap" type="com.mrbeard.process.blocks.authority.model.Permission">
        <constructor>
            <idArg column="pid" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="pname" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="pvalue" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="createdTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="updatedTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>

    <sql id="Base_Column_List">
      pid, pname, pvalue, createdTime, updatedTime
    </sql>

    <sql id="RolePermission_Column_List">
        rid,pid
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from qx_permission
        where pid = #{pid,jdbcType=VARCHAR}
    </select>

    <select id="getPermsByUserId" parameterType="java.lang.String" resultType="java.lang.String">
      select
      p.pvalue
      from
      qx_permission p
      inner join qx_rolepermission r_p on r_p.pid = p.pid
      inner join qx_userrole u_r on u_r.rid = r_p.rid
      where
      u_r.uid= #{uid,jdbcType=VARCHAR}
    </select>

    <select id="selectRolePermissionByRoleId" resultType="com.mrbeard.process.blocks.authority.model.RolePermission" parameterType="java.lang.String">
        select
        <include refid="RolePermission_Column_List"/>
        from qx_rolepermission
        where rid = #{rid,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
      delete from qx_permission
      where pid = #{pid,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteRolePermissionByRoleId" parameterType="java.lang.String">
        delete
        from qx_rolepermission
        where rid = #{rid,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.mrbeard.process.blocks.authority.model.Permission">
      insert into qx_permission (pid, pname,
        pvalue, createdTime, updatedTime)
      values (#{pid,jdbcType=VARCHAR}, #{pname,jdbcType=VARCHAR},
        #{pvalue,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertRolePermission" parameterType="java.util.List">
        insert into qx_rolepermission (rid,pid)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.rid,jdbcType=VARCHAR},#{item.pid,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.mrbeard.process.blocks.authority.model.Permission">
      update qx_permission
      <set>
          <if test="pname != null">
              pname = #{pname,jdbcType=VARCHAR},
          </if>
          <if test="pvalue != null">
              pvalue = #{pvalue,jdbcType=VARCHAR},
          </if>
          <if test="createdTime != null">
              createdTime = #{createdTime,jdbcType=TIMESTAMP},
          </if>
          <if test="updatedTime != null">
              updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
          </if>
      </set>
      where pid = #{pid,jdbcType=VARCHAR}
    </update>



</mapper>