<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbeard.process.blocks.professional.mapper.ProcessNodeMapper">
    <resultMap id="BaseResultMap" type="com.mrbeard.process.blocks.professional.model.ProcessNode">
        <constructor>
            <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="nodeCode" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="nodeName" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="nodeType" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="proId" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="nodeState" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="createdTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="updatedTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="nodeBranch" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="currentHandlePersonId" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="typeId" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="unpassReason" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="isPass" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>


    <sql id="Base_Column_List">
        id, nodeCode, nodeName, nodeType, proId, nodeState, createdTime, updatedTime, nodeBranch,
        currentHandlePersonId, typeId, unpassReason, isPass
    </sql>

    <sql id="Base_Where_Case">
        <if test="id != null and id != ''">
            and id = #{id}
        </if>
        <if test="nodeCode != null and nodeCode != ''">
            and nodeCode = #{nodeCode}
        </if>
        <if test="nodeName != null and nodeName != ''">
            and nodeName = #{nodeName}
        </if>
        <if test="nodeType != null and nodeType != ''">
            and nodeType = #{nodeType}
        </if>
        <if test="proId != null and proId != ''">
            and proId = #{proId}
        </if>
        <if test="nodeState != null and nodeState != ''">
            and nodeState = #{nodeState}
        </if>
        <if test="createdTime != null ">
            and createdTime = #{createdTime}
        </if>
        <if test="nodeBranch != null and nodeBranch != '' ">
            and nodeBranch = #{nodeBranch}
        </if>
        <if test="currentHandlePersonId != null and currentHandlePersonId != '' ">
            and currentHandlePersonId = #{currentHandlePersonId}
        </if>
        <if test="typeId != null and typeId != '' ">
            and typeId = #{typeId}
        </if>
        <if test="unpassReason != null and unpassReason != '' ">
            and unpassReason = #{unpassReason}
        </if>
        <if test="isPass != null and isPass != '' ">
            and isPass = #{isPass}
        </if>
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from p_node
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="selectByCondition" parameterType="com.mrbeard.process.blocks.professional.model.ProcessNode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from p_node
        where 1=1
        <include refid="Base_Where_Case"/>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from p_node
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.mrbeard.process.blocks.professional.model.ProcessNode">
        insert into p_node (id, nodeCode, nodeName,
          nodeType, proId, nodeState,
          createdTime, nodeBranch,
          currentHandlePersonId,typeId,
          unpassReason,isPass)
        values (#{id,jdbcType=VARCHAR}, #{nodeCode,jdbcType=VARCHAR}, #{nodeName,jdbcType=VARCHAR},
          #{nodeType,jdbcType=TINYINT}, #{proId,jdbcType=VARCHAR}, #{nodeState,jdbcType=TINYINT},
          #{createdTime,jdbcType=TIMESTAMP}, #{nodeBranch,jdbcType=VARCHAR},
          #{currentHandlePersonId,jdbcType=VARCHAR},#{typeId,jdbcType=VARCHAR},
          #{unpassReason,jdbcType=VARCHAR},#{isPass,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.mrbeard.process.blocks.professional.model.ProcessNode">
        insert into p_node
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="nodeCode != null">
                nodeCode,
            </if>
            <if test="nodeName != null">
                nodeName,
            </if>
            <if test="nodeType != null">
                nodeType,
            </if>
            <if test="proId != null">
                proId,
            </if>
            <if test="nodeState != null">
                nodeState,
            </if>
            <if test="createdTime != null">
                createdTime,
            </if>
            <if test="nodeBranch != null">
                nodeBranch,
            </if>
            <if test="currentHandlePersonId != null">
                currentHandlePersonId,
            </if>
            <if test="typeId != null">
                typeId,
            </if>
            <if test="unpassReason != null">
                unpassReason,
            </if>
            <if test="isPass != null">
                isPass,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="nodeCode != null">
                #{nodeCode,jdbcType=VARCHAR},
            </if>
            <if test="nodeName != null">
                #{nodeName,jdbcType=VARCHAR},
            </if>
            <if test="nodeType != null">
                #{nodeType,jdbcType=TINYINT},
            </if>
            <if test="proId != null">
                #{proId,jdbcType=VARCHAR},
            </if>
            <if test="nodeState != null">
                #{nodeState,jdbcType=TINYINT},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="nodeBranch != null">
                #{nodeBranch,jdbcType=VARCHAR},
            </if>
            <if test="currentHandlePersonId != null">
                #{currentHandlePersonId,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=VARCHAR},
            </if>
            <if test="unpassReason != null">
                #{unpassReason,jdbcType=VARCHAR},
            </if>
            <if test="isPass != null">
                #{isPass,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <insert id="insertBatch" parameterType="com.mrbeard.process.blocks.professional.model.ProcessNode" >
        <if test="list != null">
            insert into p_node(
            id,nodeCode,nodeName,nodeType,proId,nodeState,
            createdTime,nodeBranch,currentHandlePersonId,
            typeId,unpassReason,isPass)
            values
        </if>
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=VARCHAR},#{item.nodeCode,jdbcType=VARCHAR},
             #{item.nodeName,jdbcType=VARCHAR},#{item.nodeType,jdbcType=TINYINT},
             #{item.proId,jdbcType=VARCHAR},#{item.nodeState,jdbcType=TINYINT},
             #{item.createdTime,jdbcType=TIMESTAMP},#{item.nodeBranch,jdbcType=VARCHAR},
             #{item.currentHandlePersonId,jdbcType=VARCHAR},#{item.typeId,jdbcType=VARCHAR},
             #{item.unpassReason,jdbcType=VARCHAR},#{item.isPass,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.mrbeard.process.blocks.professional.model.ProcessNode">
        update p_node
        <set>
            <if test="nodeCode != null">
                nodeCode = #{nodeCode,jdbcType=VARCHAR},
            </if>
            <if test="nodeName != null">
                nodeName = #{nodeName,jdbcType=VARCHAR},
            </if>
            <if test="nodeType != null">
                nodeType = #{nodeType,jdbcType=TINYINT},
            </if>
            <if test="proId != null">
                proId = #{proId,jdbcType=VARCHAR},
            </if>
            <if test="nodeState != null">
                nodeState = #{nodeState,jdbcType=TINYINT},
            </if>
            <if test="createdTime != null">
                createdTime = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="nodeBranch != null">
                nodeBranch = #{nodeBranch,jdbcType=VARCHAR},
            </if>
            <if test="currentHandlePersonId != null">
                currentHandlePersonId = #{currentHandlePersonId,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                typeId = #{typeId,jdbcType=VARCHAR},
            </if>
            <if test="unpassReason != null">
                unpassReason = #{unpassReason,jdbcType=VARCHAR},
            </if>
            <if test="isPass != null">
                isPass = #{isPass,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.mrbeard.process.blocks.professional.model.ProcessNode">
        update p_node
        set nodeCode = #{nodeCode,jdbcType=VARCHAR},
          nodeName = #{nodeName,jdbcType=VARCHAR},
          nodeType = #{nodeType,jdbcType=TINYINT},
          proId = #{proId,jdbcType=VARCHAR},
          nodeState = #{nodeState,jdbcType=TINYINT},
          createdTime = #{createdTime,jdbcType=TIMESTAMP},
          nodeBranch = #{nodeBranch,jdbcType=VARCHAR},
          currentHandlePersonId = #{currentHandlePersonId,jdbcType=VARCHAR},
          typeId = #{typeId,jdbcType=VARCHAR},
          unpassReason = #{unpassReason,jdbcType=VARCHAR},
          isPass = #{isPass,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>