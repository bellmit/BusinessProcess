<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbeard.process.blocks.professional.mapper.ProcessNodeTypeBaseMapper">
  <resultMap id="BaseResultMap" type="com.mrbeard.process.blocks.professional.model.ProcessNodeTypeBase">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="parentsId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="isBeginNode" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="isEndNode" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="correlationId" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, parentsId, isBeginNode, isEndNode, correlationId
  </sql>

  <sql id="Base_Where_Clouse">
    where 1=1
    <if test="id != null and id != ''">
       and id = #{id}
    </if>
    <if test="name != null and name != ''">
       and name = #{name}
    </if>
    <if test="parentsId != null and parentsId != ''">
       and parentsId = #{parentsId}
    </if>
    <if test="isBeginNode != null and isBeginNode != ''">
       and isBeginNode = #{isBeginNode}
    </if>
    <if test="isEndNode != null and isEndNode != ''">
       and isEndNode = #{isEndNode}
    </if>
    <if test="correlationId != null and correlationId != ''">
       and correlationId = #{correlationId}
    </if>
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_node_type_base
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectByParentsId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from p_node_type_base
    where parentsId like CONCAT(CONCAT('%', #{id,jdbcType=VARCHAR}), '%')
  </select>

  <select id="selectByCondition" parameterType="com.mrbeard.process.blocks.professional.model.ProcessNodeTypeBase" resultType="com.mrbeard.process.blocks.professional.model.ProcessNodeTypeBase">
    select
    <include refid="Base_Column_List"/>
    from p_node_type_base
    <include refid="Base_Where_Clouse"/>
  </select>

  <select id="selectListByCondition" parameterType="com.mrbeard.process.blocks.professional.model.ProcessNodeTypeBase" resultType="com.mrbeard.process.blocks.professional.model.ProcessNodeTypeBase">
    select
    <include refid="Base_Column_List"/>
    from p_node_type_base
    <include refid="Base_Where_Clouse"/>
  </select>

  <select id="selectBeginNodeList" resultType="com.mrbeard.process.blocks.professional.model.ProcessNodeTypeBase">
    select
    <include refid="Base_Column_List"/>
    from p_node_type_base
    where isBeginNode = 1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from p_node_type_base
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.mrbeard.process.blocks.professional.model.ProcessNodeTypeBase">
    insert into p_node_type_base (id, name, parentsId, 
      isBeginNode, isendnode, correlationId)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{parentsid,jdbcType=VARCHAR}, 
      #{isbeginnode,jdbcType=TINYINT},#{isendnode,jdbcType=TINYINT}, #{correlationid,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.mrbeard.process.blocks.professional.model.ProcessNodeTypeBase">
    insert into p_node_type_base
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parentsid != null">
        parentsId,
      </if>
      <if test="isbeginnode != null">
        isBeginNode,
      </if>
      <if test="isendnode != null">
        isEndNode,
      </if>
      <if test="correlationid != null">
        correlationId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentsid != null">
        #{parentsid,jdbcType=VARCHAR},
      </if>
      <if test="isbeginnode != null">
        #{isbeginnode,jdbcType=TINYINT},
      </if>
      <if test="isendnode != null">
        #{isendnode,jdbcType=TINYINT},
      </if>
      <if test="correlationid != null">
        #{correlationid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.mrbeard.process.blocks.professional.model.ProcessNodeTypeBase">
    update p_node_type_base
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentsid != null">
        parentsId = #{parentsid,jdbcType=VARCHAR},
      </if>
      <if test="isbeginnode != null">
        isBeginNode = #{isbeginnode,jdbcType=TINYINT},
      </if>
      <if test="isendnode != null">
        isendnode = #{isendnode,jdbcType=TINYINT},
      </if>
      <if test="correlationid != null">
        correlationId = #{correlationid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.mrbeard.process.blocks.professional.model.ProcessNodeTypeBase">
    update p_node_type_base
    set name = #{name,jdbcType=VARCHAR},
      parentsId = #{parentsid,jdbcType=VARCHAR},
      isBeginNode = #{isbeginnode,jdbcType=TINYINT},
      isEndNode = #{isendnode,jdbcType=TINYINT},
      correlationId = #{correlationid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>