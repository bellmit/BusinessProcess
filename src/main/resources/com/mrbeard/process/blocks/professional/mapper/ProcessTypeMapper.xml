<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbeard.process.blocks.professional.mapper.ProcessTypeMapper">
  <resultMap id="BaseResultMap" type="com.mrbeard.process.blocks.professional.model.ProcessType">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="typeName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="createdTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updatedTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, typeName, description, code, createdTime, updatedTime
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_process_type
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="selectTypeList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from p_process_type
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from p_process_type
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.mrbeard.process.blocks.professional.model.ProcessType">
    insert into p_process_type (id, typeName, description, code, createdTime, updatedTime)
    values (#{id,jdbcType=VARCHAR}, #{typename,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR},
    #{createdTime,jdbcType=TIMESTAMP},#{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  
  <insert id="insertSelective" parameterType="com.mrbeard.process.blocks.professional.model.ProcessType">
    insert into p_process_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="typename != null">
        typeName,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="createdTime != null">
        createdTime,
      </if>
      <if test="updatedTime != null">
        updatedTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="typename != null">
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.mrbeard.process.blocks.professional.model.ProcessType">
    update p_process_type
    <set>
      <if test="typename != null">
        typeName = #{typename,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        createdTime = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.mrbeard.process.blocks.professional.model.ProcessType">
    update p_process_type
    set typeName = #{typename,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      createdTime = #{createdTime,jdbcType=TIMESTAMP},
      updatedTime = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>