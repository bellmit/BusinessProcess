<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbeard.process.blocks.professional.mapper.ProcessMapper">
  <resultMap id="BaseResultMap" type="com.mrbeard.process.blocks.professional.model.Process">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="typeId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="level" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="createdId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="createdTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updatedTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="handleState" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="fileState" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="state" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="applicationReason" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List">
    id, title, typeId,  level, createdId, createdTime, updatedTime, handleState,
    fileState, state, applicationReason
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_process
    where id = #{id,jdbcType=VARCHAR} and state = 1
  </select>

  <select id="selectListByIds" resultMap="BaseResultMap" parameterType="java.util.List">
      select
      <include refid="Base_Column_List" />
      from p_process
      <choose>
        <when test="list != null and list.size() > 0">
          where id in
          <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.proId}
          </foreach>
        </when>
        <otherwise>
          where 1 =2
        </otherwise>
      </choose>
  </select>

  <select id="seleNodeInfoByUid" parameterType="Map" resultType="com.mrbeard.process.blocks.professional.dto.ProcessNodeInfoDto">
    select p.title, u.realName as createdName, p.applicationReason,p.createdTime, n.id as nodeId,
        n.isPass, n.unPassReason,
    case p.level
        when '2' then '重要'
        when '3' then '紧急'
    else
        '正常' end
        as level
    FROM
	p_process p
	LEFT JOIN p_node n ON  p.id = n.proId
	LEFT JOIN qx_user u ON u.uid = p.createdId
	<where>
	    <if test="uid != null and uid != ''">
          and n.currentHandlePersonId = #{uid}
        </if>
        <if test="nodeState != null">
          and n.nodeState = #{nodeState}
        </if>
        <if test="isBeginNode != null">
          and n.isBeginNode = #{isBeginNode}
        </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from p_process
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.mrbeard.process.blocks.professional.model.Process">
    insert into p_process (id, title, typeId, 
      level, createdId,
      createdTime, updatedTime, handleState, 
      fileState, state,applicationReason)
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR},
      #{level,jdbcType=TINYINT}, #{createdId,jdbcType=VARCHAR},
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, #{handleState,jdbcType=TINYINT}, 
      #{fileState,jdbcType=TINYINT}, #{state,jdbcType=TINYINT},#{applicationReason,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.mrbeard.process.blocks.professional.model.Process">
    insert into p_process
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="typeId != null">
        typeId,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="createdId != null">
        createdId,
      </if>
      <if test="createdTime != null">
        createdTime,
      </if>
      <if test="updatedTime != null">
        updatedTime,
      </if>
      <if test="handleState != null">
        handleState,
      </if>
      <if test="fileState != null">
        fileState,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="applicationReason != null">
        applicationReason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="createdId != null">
        #{createdId,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="handleState != null">
        #{handleState,jdbcType=TINYINT},
      </if>
      <if test="fileState != null">
        #{fileState,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="applicationReason != null">
        #{applicationReason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.mrbeard.process.blocks.professional.model.Process">
    update p_process
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        typeId = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="createdId != null">
        createdId = #{createdId,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        createdTime = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="handleState != null">
        handleState = #{handleState,jdbcType=TINYINT},
      </if>
      <if test="fileState != null">
        fileState = #{fileState,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="applicationReason != null">
        applicationReason = #{applicationReason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.mrbeard.process.blocks.professional.model.Process">
    update p_process
    set title = #{title,jdbcType=VARCHAR},
      typeId = #{typeId,jdbcType=VARCHAR},
      level = #{level,jdbcType=TINYINT},
      createdId = #{createdId,jdbcType=VARCHAR},
      createdTime = #{createdTime,jdbcType=TIMESTAMP},
      updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      handleState = #{handleState,jdbcType=TINYINT},
      fileState = #{fileState,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      applicationReason = #{applicationReason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

</mapper>